{"title":"批处理使用命令","uid":"58ea37fede9aed6ff7e0b612983be198","slug":"bat","date":"2020-10-10T02:13:36.000Z","updated":"2023-03-04T14:26:42.757Z","comments":true,"path":"api/articles/bat.json","keywords":null,"cover":null,"content":"<h1 style=\"text-align:center\">批处理使用命令</h1>\n\n<span id=\"more\"></span>\n\n<h2 id=\"批处理命令简介\"><a href=\"#批处理命令简介\" class=\"headerlink\" title=\"批处理命令简介\"></a>批处理命令简介</h2><ul>\n<li>echo<ul>\n<li>rem</li>\n<li>pause</li>\n<li>call</li>\n<li>start</li>\n<li>goto</li>\n<li>set</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://link.zhihu.com/?target=http://xstarcd.github.io/wiki/windows/windows_cmd_summary_commands.html\">批处理常用命令总结</a></p>\n<h2 id=\"批处理符号简介\"><a href=\"#批处理符号简介\" class=\"headerlink\" title=\"批处理符号简介\"></a>批处理符号简介</h2><ul>\n<li>回显屏蔽 @<ul>\n<li>重定向1 &gt;与&gt;&gt;</li>\n<li>重定向2 &lt;</li>\n<li>管道符号 |</li>\n<li>转义符 ^</li>\n<li>逻辑命令符包括：&amp;、&amp;&amp;、||</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://link.zhihu.com/?target=http://xstarcd.github.io/wiki/windows/windows_cmd_summary_symbols.html\">批处理常用命令总结</a></p>\n<h2 id=\"常用DOS命令\"><a href=\"#常用DOS命令\" class=\"headerlink\" title=\"常用DOS命令\"></a>常用DOS命令</h2><p><strong>文件夹管理</strong></p>\n<ul>\n<li>cd 显示当前目录名或改变当前目录。</li>\n<li>md 创建目录。</li>\n<li>rd 删除一个目录。</li>\n<li>dir 显示目录中的文件和子目录列表。</li>\n<li>tree 以图形显示驱动器或路径的文件夹结构。</li>\n<li>path 为可执行文件显示或设置一个搜索路径。</li>\n<li>xcopy 复制文件和目录树。</li>\n</ul>\n<p><strong>文件管理</strong></p>\n<ul>\n<li>type 显示文本文件的内容。</li>\n<li>copy 将一份或多份文件复制到另一个位置。</li>\n<li>del 删除一个或数个文件。</li>\n<li>move 移动文件并重命名文件和目录。(Windows XP Home Edition中没有)</li>\n<li>ren 重命名文件。</li>\n<li>replace 替换文件。</li>\n<li>attrib 显示或更改文件属性。</li>\n<li>find 搜索字符串。</li>\n<li>fc 比较两个文件或两个文件集并显示它们之间的不同</li>\n</ul>\n<p><strong>网络命令</strong></p>\n<ul>\n<li>ping 进行网络连接测试、名称解析</li>\n<li>ftp 文件传输</li>\n<li>net 网络命令集及用户管理</li>\n<li>telnet 远程登陆</li>\n<li>ipconfig显示、修改TCP&#x2F;IP设置</li>\n<li>msg 给用户发送消息</li>\n<li>arp 显示、修改局域网的IP地址-物理地址映射列表</li>\n</ul>\n<p><strong>系统管理</strong></p>\n<ul>\n<li>at 安排在特定日期和时间运行命令和程序</li>\n<li>shutdown立即或定时关机或重启</li>\n<li>tskill 结束进程</li>\n<li>taskkill结束进程(比tskill高级，但WinXPHome版中无该命令)</li>\n<li>tasklist显示进程列表(Windows XP Home Edition中没有)</li>\n<li>sc 系统服务设置与控制</li>\n<li>reg 注册表控制台工具</li>\n<li>powercfg控制系统上的电源设置</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>对于以上列出的所有命令，在cmd中输入命令+&#x2F;?即可查看该命令的帮助信息。如find &#x2F;?</p></blockquote>\n<h2 id=\"Windows-Batch-常用命令\"><a href=\"#Windows-Batch-常用命令\" class=\"headerlink\" title=\"Windows Batch 常用命令\"></a>Windows Batch 常用命令</h2> <pre class=\"line-numbers language-bat\" data-language=\"bat\"><code class=\"language-bat\">1 echo 和 @\n回显命令\n@                     #关闭单行回显\necho off              #从下一行开始关闭回显\n@echo off             #从本行开始关闭回显。一般批处理第一行都是这个\necho on               #从下一行开始打开回显\necho                  #显示当前是 echo off 状态还是 echo on 状态\necho.                 #输出一个”回车换行”，空白行\n                          #(同echo, echo; echo+ echo[ echo] echo&#x2F; echo)\n\n2 errorlevel\necho %errorlevel%\n每个命令运行结束，可以用这个命令行格式查看返回码\n默认值为0，一般命令执行出错会设 errorlevel 为1\n\n3 dir\n显示文件夹内容\ndir                  #显示当前目录中的文件和子目录\ndir &#x2F;a               #显示当前目录中的文件和子目录，包括隐藏文件和系统文件\ndir c: &#x2F;a:d          #显示 C 盘当前目录中的目录\ndir c: &#x2F;a:-d         #显示 C 盘根目录中的文件\ndir c: &#x2F;b&#x2F;p         #&#x2F;b只显示文件名，&#x2F;p分页显示\ndir *.exe &#x2F;s         #显示当前目录和子目录里所有的.exe文件\n\n4 cd\n切换目录\ncd                  #进入根目录\ncd                   #显示当前目录\ncd &#x2F;d d:sdk         #可以同时更改盘符和目录\n\n5 md\n创建目录\nmd d:abc          #如果 d:a 不存在，将会自动创建中级目录\n #如果命令扩展名被停用，则需要键入 mkdir abc。\n\n6 rd\n删除目录\nrd abc               #删除当前目录里的 abc 子目录，要求为空目录\nrd &#x2F;s&#x2F;q d:temp      #删除 d:temp 文件夹及其子文件夹和文件，&#x2F;q安静模式\n\n7 del\n删除文件\ndel d:test.txt      #删除指定文件，不能是隐藏、系统、只读文件\ndel &#x2F;q&#x2F;a&#x2F;f d:temp*.*\n删除 d:temp 文件夹里面的所有文件，包括隐藏、只读、系统文件，不包括子目录\ndel &#x2F;q&#x2F;a&#x2F;f&#x2F;s d:temp*.*\n删除 d:temp 及子文件夹里面的所有文件，包括隐藏、只读、系统文件，不包括子目录\n\n8 ren\n重命名命令\nren d:temp tmp      #支持对文件夹的重命名\n\n9 cls\n清屏\n\n10 type\n显示文件内容\ntype c:boot.ini     #显示指定文件的内容，程序文件一般会显示乱码\ntype *.txt           #显示当前目录里所有.txt文件的内容\n\n11 copy\n拷贝文件\ncopy c:test.txt d:test.bak\n复制 c:test.txt 文件到 d: ，并重命名为 test.bak\ncopy con test.txt\n从屏幕上等待输入，按 Ctrl+Z 结束输入，输入内容存为test.txt文件\ncon代表屏幕，prn代表打印机，nul代表空设备\ncopy 1.txt + 2.txt 3.txt\n合并 1.txt 和 2.txt 的内容，保存为 3.txt 文件\n如果不指定 3.txt ，则保存到 1.txt\ncopy test.txt +\n复制文件到自己，实际上是修改了文件日期\n\n12 title\n设置cmd窗口的标题\ntitle 新标题         #可以看到cmd窗口的标题栏变了\n\n13 ver\n显示系统版本\n\n14 label 和 vol\n设置卷标\nvol                  #显示卷标\nlabel                #显示卷标，同时提示输入新卷标\nlabel c:system       #设置C盘的卷标为 system\n\n15 pause\n暂停命令\n\n16 rem 和 ::\n注释命令\n注释行不执行操作\n\n17 date 和 time\n日期和时间\ndate           #显示当前日期，并提示输入新日期，按&quot;回车&quot;略过输入\ndate&#x2F;t         #只显示当前日期，不提示输入新日期\ntime           #显示当前时间，并提示输入新时间，按&quot;回车&quot;略过输入\ntime&#x2F;t         #只显示当前时间，不提示输入新时间\n\n18 goto 和 :\n跳转命令\n:label         #行首为:表示该行是标签行，标签行不执行操作\ngoto label     #跳转到指定的标签那一行\n\n19 find (外部命令)\n查找命令\nfind &quot;abc&quot; c:test.txt\n在 c:test.txt 文件里查找含 abc 字符串的行\n如果找不到，将设 errorlevel 返回码为1\nfind &#x2F;i “abc” c:test.txt\n查找含 abc 的行，忽略大小写\nfind &#x2F;c &quot;abc&quot; c:test.txt\n显示含 abc 的行的行数\n\n20 more (外部命令)\n逐屏显示\nmore c:test.txt     #逐屏显示 c:test.txt 的文件内容\n\n21 tree\n显示目录结构\ntree d:             #显示D盘的文件目录结构\n\n22 &amp;\n顺序执行多条命令，而不管命令是否执行成功\n\n23 &amp;&amp;\n顺序执行多条命令，当碰到执行出错的命令后将不执行后面的命令\nfind &quot;ok&quot; c:test.txt &amp;&amp; echo 成功\n如果找到了&quot;ok&quot;字样，就显示&quot;成功&quot;，找不到就不显示\n\n24 ||\n顺序执行多条命令，当碰到执行正确的命令后将不执行后面的命令\nfind &quot;ok&quot; c:test.txt || echo 不成功\n如果找不到&quot;ok&quot;字样，就显示&quot;不成功&quot;，找到了就不显示\n\n25 |\n管道命令\ndir *.* &#x2F;s&#x2F;a | find &#x2F;c &quot;.exe&quot;\n管道命令表示先执行 dir 命令，对其输出的结果执行后面的 find 命令\n该命令行结果：输出当前文件夹及所有子文件夹里的.exe文件的个数\ntype c:test.txt|more\n这个和 more c:test.txt 的效果是一样的\n\n26 &gt; 和 &gt;&gt;\n输出重定向命令\n &gt; 清除文件中原有的内容后再写入\n &gt;&gt; 追加内容到文件末尾，而不会清除原有的内容\n主要将本来显示在屏幕上的内容输出到指定文件中\n指定文件如果不存在，则自动生成该文件\ntype c:test.txt &gt;prn\n屏幕上不显示文件内容，转向输出到打印机\necho hello world&gt;con\n在屏幕上显示hello world，实际上所有输出都是默认 &gt;con 的\ncopy c:test.txt f: &gt;nul\n拷贝文件，并且不显示&quot;文件复制成功&quot;的提示信息，但如果f盘不存在，还是会显示出错信息\ncopy c:test.txt f: &gt;nul 2&gt;nul\n不显示”文件复制成功”的提示信息，并且f盘不存在的话，也不显示错误提示信息\necho ^^W ^&gt; ^W&gt;c:test.txt\n生成的文件内容为 ^W &gt; W\n^ 和 &gt; 是控制命令，要把它们输出到文件，必须在前面加个 ^ 符号\n\n27 &lt;\n从文件中获得输入信息，而不是从屏幕上\n一般用于 date time label 等需要等待输入的命令\n@echo off\necho 2005-05-01&gt;temp.txt\ndate &lt;temp.txt\ndel temp.txt\n这样就可以不等待输入直接修改当前日期\n\n28 %0 %1 %2 %3 %4 %5 %6 %7 %8 %9 %*\n命令行传递给批处理的参数\n%0 批处理文件本身\n%1 第一个参数\n%9 第九个参数\n%* 从第一个参数开始的所有参数\n\n批参数(%n)的替代已被增强。您可以使用以下语法:\n\n​     %~1          - 删除引号(&quot;)，扩充 %1\n​     %~f1         - 将 %1 扩充到一个完全合格的路径名\n​     %~d1         - 仅将 %1 扩充到一个驱动器号\n​     %~p1         - 仅将 %1 扩充到一个路径\n​     %~n1         - 仅将 %1 扩充到一个文件名\n​     %~x1         - 仅将 %1 扩充到一个文件扩展名\n​     %~s1         - 扩充的路径指含有短名\n​     %~a1         - 将 %1 扩充到文件属性\n​     %~t1         - 将 %1 扩充到文件的日期&#x2F;时间\n​     %~z1         - 将 %1 扩充到文件的大小\n​     %~$PATH : 1 - 查找列在 PATH 环境变量的目录，并将 %1\n​                   扩充到找到的第一个完全合格的名称。如果环境\n​                   变量名未被定义，或者没有找到文件，此组合键会\n​                   扩充到空字符串\n\n可以组合修定符来取得多重结果:\n\n​    %~dp1        - 只将 %1 扩展到驱动器号和路径\n​    %~nx1        - 只将 %1 扩展到文件名和扩展名\n​    %~dp$PATH:1 - 在列在 PATH 环境变量中的目录里查找 %1，\n​                   并扩展到找到的第一个文件的驱动器号和路径。\n​    %~ftza1      - 将 %1 扩展到类似 DIR 的输出行。\n可以参照 call&#x2F;? 或 for&#x2F;? 看出每个参数的含意\necho load &quot;%%1&quot; &quot;%%2&quot;&gt;c:test.txt\n生成的文件内容为 load &quot;%1&quot; &quot;%2&quot;\n批处理文件里，用这个格式把命令行参数输出到文件\n\n29 if\n判断命令\nif &quot;%1&quot;&#x3D;&#x3D;&quot;&#x2F;a&quot; echo 第一个参数是&#x2F;a\nif &#x2F;i &quot;%1&quot; equ &quot;&#x2F;a&quot; echo 第一个参数是&#x2F;a\n&#x2F;i 表示不区分大小写，equ 和 &#x3D;&#x3D; 是一样的，其它运算符参见 if&#x2F;?\nif exist c:test.bat echo 存在c:test.bat文件\nif not exist c:windows (\n     echo 不存在c:windows文件夹\n     )\nif exist c:test.bat (\n     echo 存在c:test.bat\n     ) else (\n     echo 不存在c:test.bat\n     )\n\n30 setlocal 和 endlocal\n设置”命令扩展名”和”延缓环境变量扩充”\nSETLOCAL ENABLEEXTENSIONS             #启用&quot;命令扩展名&quot;\nSETLOCAL DISABLEEXTENSIONS            #停用&quot;命令扩展名&quot;\nSETLOCAL ENABLEDELAYEDEXPANSION       #启用&quot;延缓环境变量扩充&quot;\nSETLOCAL DISABLEDELAYEDEXPANSION      #停用&quot;延缓环境变量扩充&quot;\nENDLOCAL                              #恢复到使用SETLOCAL语句以前的状态\n“命令扩展名”默认为启用\n“延缓环境变量扩充”默认为停用\n批处理结束系统会自动恢复默认值\n可以修改注册表以禁用&quot;命令扩展名&quot;，详见 cmd &#x2F;? 。所以用到&quot;命令扩展名&quot;的程\n序，建议在开头和结尾加上 SETLOCAL ENABLEEXTENSIONS 和 ENDLOCAL 语句，以确\n保程序能在其它系统上正确运行\n&quot;延缓环境变量扩充&quot;主要用于 if 和 for 的符合语句，在 set 的说明里有其实用例程\n\n31 set\n设置变量\n引用变量可在变量名前后加 % ，即 %变量名%\nset                     #显示目前所有可用的变量，包括系统变量和自定义的变量\necho %SystemDrive%      #显示系统盘盘符。系统变量可以直接引用\nset p                   #显示所有以p开头的变量，要是一个也没有就设errorlevel&#x3D;1\nset p&#x3D;aa1bb1aa2bb2      #设置变量p，并赋值为 &#x3D; 后面的字符串，即aa1bb1aa2bb2\necho %p%                #显示变量p代表的字符串，即aa1bb1aa2bb2\necho %p:~6%             #显示变量p中第6个字符以后的所有字符，即aa2bb2\necho %p:~6,3%           #显示第6个字符以后的3个字符，即aa2\necho %p:~0,3%           #显示前3个字符，即aa1\necho %p:~-2%            #显示最后面的2个字符，即b2\necho %p:~0,-2%          #显示除了最后2个字符以外的其它字符，即aa1bb1aa2b\necho %p:aa&#x3D;c%           #用c替换变量p中所有的aa，即显示c1bb1c2bb2\necho %p:aa&#x3D;%            #将变量p中的所有aa字符串置换为空，即显示1bb12bb2\necho %p:*bb&#x3D;c%          #第一个bb及其之前的所有字符被替换为c，即显示c1aa2bb2\nset p&#x3D;%p:*bb&#x3D;c%         #设置变量p，赋值为 %p:*bb&#x3D;c% ，即c1aa2bb2\nset &#x2F;a p&#x3D;39             #设置p为数值型变量，值为39\nset &#x2F;a p&#x3D;39&#x2F;10          #支持运算符，有小数时用去尾法，39&#x2F;10&#x3D;3.9，去尾得3，p&#x3D;3\nset &#x2F;a p&#x3D;p&#x2F;10           #用 &#x2F;a 参数时，在 &#x3D; 后面的变量可以不加%直接引用\nset &#x2F;a p&#x3D;”1&amp;0″          #”与”运算，要加引号。其它支持的运算符参见set&#x2F;?\nset p&#x3D;                  #取消p变量\nset &#x2F;p p&#x3D;请输入\n屏幕上显示”请输入”，并会将输入的字符串赋值给变量p\n注意这条可以用来取代 choice 命令\n注意变量在 if 和 for 的复合语句里是一次性全部替换的，如\n@echo off\nset p&#x3D;aaa\nif %p%&#x3D;&#x3D;aaa (\n     echo %p%\n     set p&#x3D;bbb\n     echo %p%\n     )\n结果将显示\naaa\naaa\n因为在读取 if 语句时已经将所有 %p% 替换为aaa\n这里的&quot;替换&quot;，在 &#x2F;? 帮助里就是指&quot;扩充&quot;、&quot;环境变量扩充&quot;\n可以启用”延缓环境变量扩充”，用 ! 来引用变量，即 !变量名!\n@echo off\nSETLOCAL ENABLEDELAYEDEXPANSION\nset p&#x3D;aaa\nif %p%&#x3D;&#x3D;aaa (\n     echo %p%\n     set p&#x3D;bbb\n     echo !p!\n     )\nENDLOCAL\n结果将显示\naaa\nbbb\n还有几个动态变量，运行 set 看不到\n%CD%                   #代表当前目录的字符串\n%DATE%                 #当前日期\n%TIME%                 #当前时间\n%RANDOM%               #随机整数，介于0~32767\n%ERRORLEVEL%           #当前 ERRORLEVEL 值\n%CMDEXTVERSION%        #当前命令处理器扩展名版本号\n%CMDCMDLINE%           #调用命令处理器的原始命令行\n可以用echo命令查看每个变量值，如 echo %time%\n注意 %time% 精确到毫秒，在批处理需要延时处理时可以用到\n\n32 start\n批处理中调用外部程序的命令，否则等外部程序完成后才继续执行剩下的指令\n\n33 call\n批处理中调用另外一个批处理的命令，否则剩下的批处理指令将不会被执行\n有时有的应用程序用start调用出错的，也可以call调用\n\n34 choice (外部命令)\n选择命令\n让用户输入一个字符，从而选择运行不同的命令，返回码errorlevel为1234……\nwin98里是[http:&#x2F;&#x2F;choice.com](https:&#x2F;&#x2F;link.zhihu.com&#x2F;?target&#x3D;http%3A&#x2F;&#x2F;choice.com)\nwin2000pro里没有，可以从win98里拷过来\nwin2003里是choice.exe\nchoice &#x2F;N &#x2F;C y &#x2F;T 5 &#x2F;D y&gt;nul\n延时5秒\n\n35 assoc 和 ftype\n文件关联\nassoc 设置&#39;文件扩展名&#39;关联，关联到&#39;文件类型&#39;\nftype 设置&#39;文件类型&#39;关联，关联到&#39;执行程序和参数&#39;\n当你双击一个.txt文件时，windows并不是根据.txt直接判断用 notepad.exe 打开\n而是先判断.txt属于 txtfile &#39;文件类型&#39;\n再调用 txtfile 关联的命令行 txtfile&#x3D;%SystemRoot%system32NOTEPAD.EXE %1\n可以在&quot;文件夹选项&quot;→&quot;文件类型&quot;里修改这2种关联\nassoc            #显示所有&#39;文件扩展名&#39;关联\nassoc .txt       #显示.txt代表的&#39;文件类型&#39;，结果显示 .txt&#x3D;txtfile\nassoc .doc       #显示.doc代表的&#39;文件类型&#39;，结果显示 .doc&#x3D;Word.Document.8\nassoc .exe       #显示.exe代表的&#39;文件类型&#39;，结果显示 .exe&#x3D;exefile\nftype            #显示所有&#39;文件类型&#39;关联\nftype exefile    #显示exefile类型关联的命令行，结果显示 exefile&#x3D;&quot;%1&quot; %*\nassoc .txt&#x3D;Word.Document.8\n设置.txt为word类型的文档，可以看到.txt文件的图标都变了\nassoc .txt&#x3D;txtfile\n恢复.txt的正确关联\nftype exefile&#x3D;&quot;%1&quot; %*\n恢复 exefile 的正确关联\n如果该关联已经被破坏，可以运行 [http:&#x2F;&#x2F;command.com](https:&#x2F;&#x2F;link.zhihu.com&#x2F;?target&#x3D;http%3A&#x2F;&#x2F;command.com) ，再输入这条命令\n\n36 pushd 和 popd\n切换当前目录\n@echo off\nc: &amp; cd &amp; md mp3        #在 C: 建立 mp3 文件夹\nmd d:mp4                #在 D: 建立 mp4 文件夹\ncd &#x2F;d d:mp4             #更改当前目录为 d:mp4\npushd c:mp3             #保存当前目录，并切换当前目录为 c:mp3\npopd                     #恢复当前目录为刚才保存的 d:mp4\n\n37 for\n循环命令\n这个比较复杂，请对照 for&#x2F;? 来看\nfor %%i in (c: d: e: f:) do echo %%i\n依次调用小括号里的每个字符串，执行 do 后面的命令\n注意%%i，在批处理中 for 语句调用参数用2个%\n默认的字符串分隔符是&quot;空格键&quot;，&quot;Tab键&quot;，&quot;回车键&quot;\nfor %%i in (*.txt) do find &quot;abc&quot; %%i\n对当前目录里所有的txt文件执行 find 命令\nfor &#x2F;r . %%i in (*.txt) do find &quot;abc&quot; %%i\n在当前目录和子目录里所有的.txt文件中搜索包含 abc 字符串的行\nfor &#x2F;r . %%i in (.) do echo %%~pni\n显示当前目录名和所有子目录名，包括路径，不包括盘符\nfor &#x2F;r d:mp3 %%i in (*.mp3) do echo %%i&gt;&gt;d:mp3.txt\n把 d:mp3 及其子目录里的mp3文件的文件名都存到 d:mp3.txt 里去\nfor &#x2F;l %%i in (2,1,8) do echo %%i\n生成2345678的一串数字，2是数字序列的开头，8是结尾，1表示每次加1\nfor &#x2F;f %%i in (&#39;set&#39;) do echo %%i\n对 set 命令的输出结果循环调用，每行一个\nfor &#x2F;f &quot;eol&#x3D;P&quot; %%i in (&#39;set&#39;) do echo %%i\n取 set 命令的输出结果，忽略以 P 开头的那几行\nfor &#x2F;f %%i in (d:mp3.txt) do echo %%i\n显示 d:mp3.txt 里的每个文件名，每行一个，不支持带空格的名称\nfor &#x2F;f &quot;delims&#x3D;&quot; %%i in (d:mp3.txt) do echo %%i\n显示 d:mp3.txt 里的每个文件名，每行一个，支持带空格的名称\nfor &#x2F;f &quot;skip&#x3D;5 tokens&#x3D;4&quot; %%a in (&#39;dir&#39;) do echo %%a\n对 dir 命令的结果，跳过前面5行，余下的每行取第4列\n每列之间的分隔符为默认的&quot;空格&quot;\n可以注意到 dir 命令输出的前5行是没有文件名的\nfor &#x2F;f &quot;tokens&#x3D;1,2,3 delims&#x3D;- &quot; %%a in (&#39;date &#x2F;t&#39;) do (\n     echo %%a\n     echo %%b\n     echo %%c\n     )\n对 date &#x2F;t 的输出结果，每行取1、2、3列\n第一列对应指定的 %%a ，后面的 %%b 和 %%c 是派生出来的，对应其它列\n分隔符指定为 - 和&quot;空格&quot;，注意 delims&#x3D;- 后面有个&quot;空格&quot;\n其中 tokens&#x3D;1,2,3 若用 tokens&#x3D;1-3 替换，效果是一样的\nfor &#x2F;f &quot;tokens&#x3D;2* delims&#x3D;- &quot; %%a in (&#39;date &#x2F;t&#39;) do echo %%b\n取第2列给 %%a ，其后的列都给 %%b\n\n38 subst (外部命令)\n映射磁盘。\nsubst z: serverd      #这样输入z:就可以访问serverd了\nsubst z: &#x2F;d              #取消该映射\nsubst                    #显示目前所有的映时\n\n39 xcopy (外部命令)\n文件拷贝\nxcopy d:mp3 e:mp3 &#x2F;s&#x2F;e&#x2F;i&#x2F;y\n复制 d:mp3 文件夹、所有子文件夹和文件到 e: ，覆盖已有文件\n加 &#x2F;i 表示如果 e: 没有 mp3 文件夹就自动新建一个，否则会有询问</code></pre>","feature":true,"text":"批处理使用命令 批处理命令简介 echo rem pause call start goto set 批处理常用命令总结 批处理符号简介 回显屏蔽 @ 重定向1 &gt;与&gt;&gt; 重定向2 &lt; 管道符号 | 转义符 ^ 逻辑命令符包括：&amp;、&amp;&am...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"windows","slug":"windows","count":1,"path":"api/categories/windows.json"}],"tags":[{"name":"脚本","slug":"脚本","count":2,"path":"api/tags/脚本.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">批处理使用命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%B9%E5%A4%84%E7%90%86%E5%91%BD%E4%BB%A4%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">批处理命令简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%B9%E5%A4%84%E7%90%86%E7%AC%A6%E5%8F%B7%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">批处理符号简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8DOS%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">常用DOS命令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Windows-Batch-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">Windows Batch 常用命令</span></a></li></ol></li></ol>","author":{"name":"云の博客","slug":"blog-author","avatar":"/images/headImg.jpg","link":"/","description":"逆水行舟，不进则退","socials":{"github":"https://github.com/wangwengang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/6235839578","zhihu":"https://www.zhihu.com/people/wang-wen-gang-88","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/bilibili.png","link":"https://space.bilibili.com/300075036?spm_id_from=333.1007.0.0"},"yuque":{"icon":"/images/yuque.png","link":"https://www.yuque.com/dashboard"},"youdaoyun":{"icon":"/images/youdaoyun.png","link":"https://note.youdao.com/web/#/file/recent/markdown/4B759CCEDB274B9B80BDAE364F584C9F/"},"email":{"icon":"/images/qq.png","link":"https://mail.qq.com/cgi-bin/frame_html?sid=7tWo2bVJUQoIWRJ2&r=fcc05bd806b6e9cb755f4c2f3c41763d&lang=zh"},"163邮箱":{"icon":"/images/163.png","link":"https://mail.163.com/js6/main.jsp?sid=XDgrOFUiTMnRnvpgWmiiQvyDkcaqoolS&df=email163#module=welcome.WelcomeModule%7C%7B%7D"}}}},"mapped":true,"prev_post":{"title":"DOCLever","uid":"1a3dadd6d2dc049cf44f32d36e769289","slug":"doclever","date":"2020-10-20T02:59:39.000Z","updated":"2023-03-04T23:57:19.440Z","comments":true,"path":"api/articles/doclever.json","keywords":null,"cover":[],"text":"搭建 DOCLever文档服务 DOClever是一个可视化免费开源的接口管理工具 ,可以分析接口结构，校验接口正确性， 围绕接口定义文档，通过一系列自动化工具提升我们的协作效率。DOClever前后端全部采用了javascript来作为我们的开发语言，前端用的是vue+elem...","link":"","photos":[],"count_time":{"symbolsCount":615,"symbolsTime":"1 mins."},"categories":[{"name":"nodeJs","slug":"nodeJs","count":1,"path":"api/categories/nodeJs.json"}],"tags":[{"name":"服务","slug":"服务","count":1,"path":"api/tags/服务.json"},{"name":"mongodb","slug":"mongodb","count":1,"path":"api/tags/mongodb.json"}],"author":{"name":"云の博客","slug":"blog-author","avatar":"/images/headImg.jpg","link":"/","description":"逆水行舟，不进则退","socials":{"github":"https://github.com/wangwengang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/6235839578","zhihu":"https://www.zhihu.com/people/wang-wen-gang-88","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/bilibili.png","link":"https://space.bilibili.com/300075036?spm_id_from=333.1007.0.0"},"yuque":{"icon":"/images/yuque.png","link":"https://www.yuque.com/dashboard"},"youdaoyun":{"icon":"/images/youdaoyun.png","link":"https://note.youdao.com/web/#/file/recent/markdown/4B759CCEDB274B9B80BDAE364F584C9F/"},"email":{"icon":"/images/qq.png","link":"https://mail.qq.com/cgi-bin/frame_html?sid=7tWo2bVJUQoIWRJ2&r=fcc05bd806b6e9cb755f4c2f3c41763d&lang=zh"},"163邮箱":{"icon":"/images/163.png","link":"https://mail.163.com/js6/main.jsp?sid=XDgrOFUiTMnRnvpgWmiiQvyDkcaqoolS&df=email163#module=welcome.WelcomeModule%7C%7B%7D"}}}},"feature":true},"next_post":{"title":"Elasticsearch的安装与使用","uid":"26ec55026225b6b5ca6c99aa5ca72e1f","slug":"elasticsearch","date":"2020-07-23T02:39:36.000Z","updated":"2023-03-04T23:57:05.691Z","comments":true,"path":"api/articles/elasticsearch.json","keywords":null,"cover":[],"text":"Elasticsearch的安装与使用 1. Elasticsearch1.1 elasticsearch（默认端口号9200） 官方下载地址：链接 1.2 ik分词器 pinyin分词器配置 链接： ik分词器 pinyin分词器1.2.1 配置 1.2.1 配置 配置后需重启...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"java","slug":"java","count":3,"path":"api/categories/java.json"}],"tags":[{"name":"分布式","slug":"分布式","count":1,"path":"api/tags/分布式.json"},{"name":"搜索服务","slug":"搜索服务","count":1,"path":"api/tags/搜索服务.json"}],"author":{"name":"云の博客","slug":"blog-author","avatar":"/images/headImg.jpg","link":"/","description":"逆水行舟，不进则退","socials":{"github":"https://github.com/wangwengang","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/6235839578","zhihu":"https://www.zhihu.com/people/wang-wen-gang-88","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/bilibili.png","link":"https://space.bilibili.com/300075036?spm_id_from=333.1007.0.0"},"yuque":{"icon":"/images/yuque.png","link":"https://www.yuque.com/dashboard"},"youdaoyun":{"icon":"/images/youdaoyun.png","link":"https://note.youdao.com/web/#/file/recent/markdown/4B759CCEDB274B9B80BDAE364F584C9F/"},"email":{"icon":"/images/qq.png","link":"https://mail.qq.com/cgi-bin/frame_html?sid=7tWo2bVJUQoIWRJ2&r=fcc05bd806b6e9cb755f4c2f3c41763d&lang=zh"},"163邮箱":{"icon":"/images/163.png","link":"https://mail.163.com/js6/main.jsp?sid=XDgrOFUiTMnRnvpgWmiiQvyDkcaqoolS&df=email163#module=welcome.WelcomeModule%7C%7B%7D"}}}}}}